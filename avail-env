#! /bin/bash

avail_path() {
    pushd `dirname $0` > /dev/null
    pwd -P
    popd > /dev/null
}

ARG_RE='[\s=]*\K[^\s^=]*'
ARGS="$@"

add_option () {
	HELP_PHRASE="$1"
	NAME="$2"
	OPTIONS="$3"
	DEFAULT="$4"

	TMP=$(echo "$ARGS" | grep -oP -- "$OPTIONS")
	test -n "$TMP" && eval "$NAME=\"$TMP\""

	OPTION_STR=$(echo "$OPTIONS" | grep -o "^(*[a-z\|-]*)*")
	let PADDING_COUNT=$HELP_PADDING_LENGTH-${#OPTION_STR}
	PADDING=$(printf '%.s ' `eval "echo {1..$PADDING_COUNT}"`)
	HELP="$HELP\n  $OPTION_STR$PADDING$HELP_PHRASE"

        # Don't process AVAIL_HELP further
	test $NAME == "AVAIL_HELP"  && return

	export $NAME

	HELP="$HELP\n    "$(printf "%"$HELP_PADDING_LENGTH"s")"(Config name: $NAME"

	if [ -n "$DEFAULT" ]; then
		test -z "$(eval 'echo $'$NAME)" && eval "$NAME=\"$DEFAULT\""
		HELP="$HELP, Default value: \"$DEFAULT\""
	fi

	HELP="$HELP)"
}

AVAIL_PATH=`avail_path`
HELP="Usage: avail-test [options]"
HELP="$HELP\n       avail-stop [options]"
HELP="$HELP\n       avail-watch [options]"
HELP="$HELP\n\nOptions: \n"
HELP_PADDING_LENGTH=22
HELP_FOOTER="\n\nAdd an issue for bug reports or suggestions https://github.com/aminmarashi/avail-test/issues"
CWD="`pwd`"

AVAIL_CONFIG="$CWD"/avail.config
AVAIL_WATCH_LOG="$CWD"/avail.log

test -e "$AVAIL_CONFIG" && . "$AVAIL_CONFIG"

# Run args
add_option "If specified this will one or more prefix to your tests" RUN_PREFIX "--run-prefix$ARG_RE"
add_option "This will be used to run your tests, you should use single quote to avoid interpolation" COMMAND "(-c|--command)$ARG_RE"
add_option "This is where we look for your test files which will be run using the COMMAND" TEST_DIR "(-t|--test-dir)$ARG_RE" "`pwd`/tests"
add_option "Init script will be executed before running the actual tests, useful for initialization purposes" INIT_SCRIPT "(-i|--init-script)$ARG_RE"

# Watch args
add_option "Use watch command to watch the tests (unset by default)" WATCH_COMMAND "(-w|--watch-command)"
add_option "Time interval between each watch update in seconds" INTERVAL "--interval$ARG_RE" 1
add_option "Timeout to consider not updated test logs to be dead in seconds" ALIVE_TIMEOUT "--alive-timeout$ARG_RE" 10
add_option "This is a command that if given will run against your test logs to determine whether they're still alive (by checking the return value of the command)\n  Also the log file is given as \$1 like the example below\n  ALIVE_CHECK='tail -n 1 \$1 | grep some_text >/dev/null 2>&1'" ALIVE_CHECK "--alive-check=\K.*" ":"
add_option "Number of lines shown from the logs (works with WATCH_COMMAND)" LOG_LINES "(-l|--log-lines)$ARG_RE" 1

# Avail args
add_option "This is where avail-test keeps its output files" AVAIL_DIR "(-d|--avail-dir)$ARG_RE" "`pwd`/.avail-tests"
add_option "Prints this help message and exits" AVAIL_HELP "(-h|--help)"

AVAIL_LOGS="$AVAIL_DIR/logs"
AVAIL_PIDS="$AVAIL_DIR/pids"

mkdir "$AVAIL_DIR" 2>/dev/null
mkdir "$AVAIL_LOGS" 2>/dev/null
mkdir "$AVAIL_PIDS" 2>/dev/null

test -n "$AVAIL_HELP" && echo -e "$HELP$HELP_FOOTER" && exit 0

test ! -d "$TEST_DIR" && echo "Test directory: $TEST_DIR does not exist, add using --test-dir [dir name]" && exit 1

export AVAIL_LOGS AVAIL_PIDS AVAIL_WATCH_LOG AVAIL_PATH
